{
	"info": {
		"_postman_id": "ad0b25b7-e18c-4001-b069-9ff8a11d445c",
		"name": "Star Wars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21886971"
	},
	"item": [
		{
			"name": "Запрос персонажа по ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Obi-Wan Kenobi\");\r",
							"});\r",
							"pm.test(\"Cache-Control is present\", function () {\r",
							"    pm.response.to.have.header(\"Cache-Control\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/people/10/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"people",
						"10",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Запрос планеты по ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.rotation_period).to.eql('18');\r",
							"});\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/planets/7/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"planets",
						"7",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Запрос космического корабля по ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(\"38\");\r",
							"});\r",
							"pm.test(\"Content-Encoding is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Encoding\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/starships/5/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"starships",
						"5",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://swapi.py4e.com/",
			"type": "string"
		}
	]
}